# موجود شرح في نهاية الملف 

# Create a function to sort an array
def bubble_sort(arr):
    for i in range(len(arr)):
        for j in range(i, len(arr)):
            if arr[i] > arr[j]:
                x = arr[i]
                arr[i] = arr[j]
                arr[j] = x
                # arr[i], arr[j] = arr[j], arr[i]
    return arr

numbers = [7, 6, 4, 3]
numbers = bubble_sort(numbers)
print(numbers)










"""
🧠🤔 تخيل أننا في سوبرماركت مزدحم 🛒

الزباين واقفين عند الكاشير، وكل واحد حامل عدد مختلف من الأغراض.
فجأة، الموظف قرر يرتبهم حسب عدد الأغراض من الأقل إلى الأكثر قبل ما يحاسبهم.

كيف؟ 🤔 بخطة بسيطة:

🔁 يبدأ بأول شخصين في الطابور.
🔍 يقارن مين معه أغراض أكثر.
↔️ إذا الأول معه أكثر، يتم تبديل أماكنهم.
➡️ بعدين ينتقل للثنائي التالي، ويكرر نفس العملية حتى نهاية الطابور.

📤 النتيجة؟
في كل جولة، الزبون اللي معه أغراض أكثر بينزاح شوي شوي لآخر الطابور...
تماماً مثل **فقاعة تطفو على سطح الماء**!

وهنا تظهر فكرة:
🔹 Bubble Sort:
تعمل كأن كل رقم كبير "بيطفو" تدريجياً لآخر الطابور، مثل الفقاعة في الماء.

🔁 الفكرة ببساطة:
- قارن كل عنصر بجاره.
- بدّل إذا كان الترتيب خاطئ.
- كرر العملية حتى يصير كل شيء مرتب.

🤔⭐ أين نستخدم Bubble Sort؟
✅ مع البيانات البسيطة (Small Data)
✅ في التعليم (Education Purpose)
✅ مع فرق جديدة بدون خبرة (Fresh Teams)
✅ في بناء نماذج أولية بسرعة (Rapid Prototyping)

⚠️ هل هي الأسرع؟
❌ لا، لأنها تحتاج مقارنة كل عنصر بجاره => الزمن = O(n²)

لكنها:
⭐ الأبسط
⭐ الأقرب لطريقة تفكير البشر
⭐ بداية رائعة لفهم الخوارزميات
"""
